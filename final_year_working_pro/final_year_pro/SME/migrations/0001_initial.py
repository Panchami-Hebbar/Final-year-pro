# Generated by Django 3.2.25 on 2024-11-17 12:06

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BuyerCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200)),
                ('industry_type', models.CharField(blank=True, max_length=100, null=True)),
                ('company_email', models.EmailField(max_length=254)),
                ('alternate_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('company_size', models.CharField(choices=[('small', 'Small'), ('medium', 'Medium'), ('large', 'Large')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_name', models.CharField(max_length=100)),
                ('subject_template', models.TextField()),
                ('body_template', models.TextField()),
                ('variables_required', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RawMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('common_uses', models.TextField(blank=True, null=True)),
                ('typical_specifications', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RawMaterialCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200)),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=50, null=True)),
                ('certification_details', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('reset_token', models.CharField(blank=True, max_length=255, null=True)),
                ('reset_token_expires', models.DateTimeField(blank=True, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_groups', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_permissions', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserSupplierMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('manager', 'Manager'), ('staff', 'Staff')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SME.supplier')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SME.user')),
            ],
            options={
                'unique_together': {('user', 'supplier')},
            },
        ),
        migrations.CreateModel(
            name='SupplierMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_stock', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('price_per_unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('minimum_order_quantity', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('quality_grade', models.CharField(blank=True, max_length=50, null=True)),
                ('available_from', models.DateField()),
                ('available_until', models.DateField()),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SME.rawmaterial')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SME.supplier')),
            ],
        ),
        migrations.AddField(
            model_name='supplier',
            name='primary_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_supplier', to='SME.user'),
        ),
        migrations.AddField(
            model_name='supplier',
            name='users',
            field=models.ManyToManyField(through='SME.UserSupplierMapping', to='SME.User'),
        ),
        migrations.AddField(
            model_name='rawmaterial',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SME.rawmaterialcategory'),
        ),
        migrations.CreateModel(
            name='MarketOpportunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opportunity_type', models.CharField(choices=[('new_requirement', 'New Requirement'), ('price_match', 'Price Match'), ('bulk_order', 'Bulk Order')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('potential_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(choices=[('identified', 'Identified'), ('contacted', 'Contacted'), ('negotiating', 'Negotiating'), ('closed', 'Closed'), ('lost', 'Lost')], default='identified', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SME.buyercompany')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SME.rawmaterial')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SME.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='EmailSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly')], max_length=10)),
                ('last_sent', models.DateTimeField(blank=True, null=True)),
                ('next_scheduled', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SME.rawmaterial')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SME.supplier')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SME.emailtemplate')),
            ],
        ),
        migrations.CreateModel(
            name='EmailCommunication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_subject', models.TextField()),
                ('email_body', models.TextField()),
                ('sent_datetime', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('failed', 'Failed'), ('opened', 'Opened'), ('replied', 'Replied')], default='sent', max_length=10)),
                ('response_received', models.TextField(blank=True, null=True)),
                ('response_date', models.DateTimeField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SME.buyercompany')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SME.rawmaterial')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SME.supplier')),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='SME.emailtemplate')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyMaterialRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monthly_usage_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('preferred_quality_grade', models.CharField(blank=True, max_length=50, null=True)),
                ('preferred_packaging', models.CharField(blank=True, max_length=100, null=True)),
                ('special_requirements', models.TextField(blank=True, null=True)),
                ('last_purchase_date', models.DateField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SME.buyercompany')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SME.rawmaterial')),
            ],
        ),
    ]
